# Uncrustify 0.64_d
input_tab_size                  = 4
output_tab_size                 = 4
indent_columns                  = 4
indent_class                    = true
indent_func_call_param          = true
indent_func_def_param           = true
indent_paren_close              = 2
sp_arith                        = force
sp_assign                       = force
sp_assign_default               = force
sp_enum_assign                  = force
sp_pp_concat                    = force
sp_pp_stringify                 = force
sp_bool                         = force
sp_compare                      = force
sp_inside_paren                 = force
sp_cparen_oparen                = force
sp_paren_brace                  = force
sp_before_ptr_star              = remove
sp_between_ptr_star             = remove
sp_after_ptr_star               = force
sp_after_ptr_star_qualifier     = force
sp_after_ptr_star_func          = force
sp_before_ptr_star_func         = remove
sp_before_byref                 = remove
sp_after_byref                  = force
sp_after_byref_func             = force
sp_before_byref_func            = remove
sp_template_angle               = remove
sp_before_angle                 = remove
sp_inside_angle                 = force
sp_after_angle                  = remove
sp_angle_paren                  = remove
sp_angle_paren_empty            = remove
sp_angle_word                   = force
sp_angle_shift                  = force
sp_before_sparen                = force
sp_inside_sparen                = force
sp_after_sparen                 = remove
sp_sparen_brace                 = remove
sp_special_semi                 = force
sp_before_semi_for              = remove
sp_before_semi_for_empty        = remove
sp_after_semi                   = remove
sp_after_semi_for_empty         = remove
sp_before_square                = remove
sp_before_squares               = remove
sp_inside_square                = remove
sp_after_comma                  = force
sp_before_ellipsis              = remove
sp_after_class_colon            = force
sp_before_class_colon           = force
sp_after_constr_colon           = force
sp_before_constr_colon          = force
sp_after_operator               = remove
sp_after_operator_sym           = remove
sp_after_operator_sym_empty     = remove
sp_after_cast                   = force
sp_inside_paren_cast            = remove
sp_cpp_cast_paren               = remove
sp_sizeof_paren                 = remove
sp_inside_braces_enum           = remove
sp_inside_braces_struct         = remove
sp_inside_braces                = force
sp_inside_braces_empty          = remove
sp_func_proto_paren             = remove
sp_func_proto_paren_empty       = remove
sp_func_def_paren               = remove
sp_func_def_paren_empty         = remove
sp_inside_fparens               = remove
sp_inside_fparen                = remove
sp_square_fparen                = remove
sp_fparen_brace                 = force
sp_func_call_paren              = remove
sp_func_class_paren             = remove
sp_func_class_paren_empty       = remove
sp_return_paren                 = force
sp_attribute_paren              = remove
sp_defined_paren                = remove
sp_throw_paren                  = force
sp_catch_paren                  = force
sp_macro                        = force
sp_macro_func                   = force
sp_else_brace                   = force
sp_brace_else                   = force
sp_brace_typedef                = force
sp_catch_brace                  = force
sp_brace_catch                  = force
sp_try_brace                    = force
sp_word_brace                   = remove
sp_word_brace_ns                = force
sp_before_dc                    = remove
sp_after_dc                     = remove
sp_cond_colon                   = force
sp_cond_question                = force
sp_case_label                   = force
sp_cmt_cpp_start                = force
sp_cmt_cpp_doxygen              = true
sp_cmt_cpp_qttr                 = true
sp_endif_cmt                    = force
sp_after_new                    = force
sp_between_new_paren            = remove
sp_before_tr_emb_cmt            = force
align_func_params               = true
align_var_def_span              = 1
align_assign_span               = 1
align_var_class_span            = 1
align_right_cmt_span            = 2
align_pp_define_span            = 4
nl_assign_leave_one_liners      = true
nl_enum_leave_one_liners        = true
nl_cpp_lambda_leave_one_liners  = true
nl_start_of_file                = remove
nl_end_of_file                  = force
nl_end_of_file_min              = 1
nl_assign_brace                 = force
nl_func_var_def_blk             = 1
nl_fcall_brace                  = force
nl_enum_brace                   = force
nl_struct_brace                 = force
nl_union_brace                  = force
nl_if_brace                     = force
nl_brace_else                   = force
nl_elseif_brace                 = force
nl_else_brace                   = force
nl_else_if                      = remove
nl_try_brace                    = force
nl_for_brace                    = force
nl_catch_brace                  = force
nl_brace_catch                  = force
nl_brace_square                 = force
nl_brace_fparen                 = force
nl_while_brace                  = force
nl_do_brace                     = force
nl_brace_while                  = force
nl_switch_brace                 = force
nl_multi_line_cond              = true
nl_before_throw                 = force
nl_namespace_brace              = force
nl_template_class               = force
nl_class_brace                  = force
nl_func_type_name               = remove
nl_func_class_scope             = remove
nl_func_scope_name              = remove
nl_func_proto_type_name         = remove
nl_func_paren                   = remove
nl_func_def_paren               = remove
nl_func_decl_start              = remove
nl_func_def_start               = force
nl_func_def_start_single        = remove
nl_func_decl_args               = remove
nl_func_def_args                = force
nl_func_decl_end                = remove
nl_func_def_end                 = force
nl_func_def_end_single          = remove
nl_func_decl_empty              = remove
nl_func_def_empty               = remove
nl_fdef_brace                   = force
nl_after_vbrace_close           = true
nl_before_if                    = force
nl_after_if                     = force
nl_before_for                   = force
nl_after_for                    = force
nl_before_while                 = force
nl_after_while                  = force
nl_before_switch                = force
nl_after_switch                 = force
nl_before_do                    = force
nl_after_do                     = force
nl_after_func_proto_group       = 1
nl_after_func_body              = 2
nl_after_func_body_class        = 2
nl_after_func_body_one_liner    = 2
nl_after_struct                 = 1
nl_after_class                  = 1
nl_before_access_spec           = 1
nl_after_return                 = true
mod_full_brace_do               = force
mod_full_brace_for              = force
mod_full_brace_if               = force
mod_full_brace_while            = force
mod_paren_on_return             = remove
mod_remove_extra_semicolon      = true
mod_add_long_switch_closebrace_comment = 20
mod_add_long_ifdef_endif_comment = 20
pp_indent_at_level              = true
# option(s) with 'not default' value: 186
#
# -=====-
# Line              Tag           Parent          Columns Br/Lvl/pp     Flag   Nl  Text
#   1>        NAMESPACE[            NONE][  1/  1/ 10/  0][0/0/0][     70000][0-0] namespace
#   1>             WORD[       NAMESPACE][ 11/ 11/ 15/  1][0/0/0][         0][0-0]           test
#   1>          NEWLINE[            NONE][ 15/ 15/  1/  0][0/0/0][         0][1-0]
#   2>       BRACE_OPEN[       NAMESPACE][  1/  1/  2/  0][0/0/0][ 100000000][0-0] {
#   2>          NEWLINE[            NONE][  2/  2/  1/  0][1/1/0][      1000][1-0]
#   3>         TEMPLATE[            NONE][  1/  1/  9/  0][1/1/0][     61000][0-0] template
#   3>       ANGLE_OPEN[        TEMPLATE][  9/  9/ 10/  0][1/1/0][ 100001040][0-0]         <
#   3>             TYPE[            NONE][ 11/ 11/ 16/  1][1/2/0][     51040][0-0]           class
#   3>             TYPE[            NONE][ 17/ 17/ 18/  1][1/2/0][      1040][0-0]                 T
#   3>      ANGLE_CLOSE[        TEMPLATE][ 19/ 19/ 20/  1][1/1/0][ 100001040][0-0]                   >
#   3>          NEWLINE[            NONE][ 20/ 20/  1/  0][1/1/0][      1000][1-0]
#   4>            CLASS[        TEMPLATE][  1/  1/  6/  0][1/1/0][     51000][0-0] class
#   4>             TYPE[           CLASS][  7/  7/ 13/  1][1/1/0][      1000][0-0]       future
#   4>        SEMICOLON[        TEMPLATE][ 13/ 13/ 14/  0][1/1/0][ 100001000][0-0]             ;
#   4>          NEWLINE[            NONE][ 14/ 14/  1/  0][1/1/0][      1000][2-0]
#   6>         TEMPLATE[            NONE][  1/  1/  9/  0][1/1/0][     61000][0-0] template
#   6>       ANGLE_OPEN[        TEMPLATE][  9/  9/ 10/  0][1/1/0][ 100001040][0-0]         <
#   6>         TYPENAME[            NONE][ 11/ 11/ 19/  1][1/2/0][     51040][0-0]           typename
#   6>             TYPE[            NONE][ 20/ 20/ 21/  1][1/2/0][      1040][0-0]                    T
#   6>      ANGLE_CLOSE[        TEMPLATE][ 22/ 22/ 23/  1][1/1/0][ 100001040][0-0]                      >
#   6>          NEWLINE[            NONE][ 23/ 23/  1/  0][1/1/0][      1000][1-0]
#   7>             TYPE[      FUNC_PROTO][  1/  1/  5/  0][1/1/0][     51000][0-0] void
#   7>       FUNC_PROTO[            NONE][  6/  6/ 10/  1][1/1/0][      1000][0-0]      swap
#   7>      FPAREN_OPEN[      FUNC_PROTO][ 10/ 10/ 11/  0][1/1/0][ 100001000][0-0]          (
#   7>             TYPE[            NONE][ 11/ 11/ 17/  0][1/2/0][    441008][0-0]           future
#   7>       ANGLE_OPEN[        TEMPLATE][ 17/ 17/ 18/  0][1/2/0][ 100001048][0-0]                 <
#   7>             TYPE[            NONE][ 19/ 19/ 20/  1][1/3/0][     41048][0-0]                   T
#   7>      ANGLE_CLOSE[        TEMPLATE][ 21/ 21/ 22/  1][1/2/0][ 100001048][0-0]                     >
#   7>            BYREF[            NONE][ 22/ 22/ 23/  0][1/2/0][ 100041008][0-0]                      &
#   7>             WORD[            NONE][ 24/ 24/ 25/  1][1/2/0][    801008][0-0]                        f
#   7>            COMMA[            NONE][ 25/ 25/ 26/  0][1/2/0][ 100001008][0-0]                         ,
#   7>             TYPE[            NONE][ 27/ 27/ 33/  1][1/2/0][    441008][0-0]                           future
#   7>       ANGLE_OPEN[        TEMPLATE][ 33/ 33/ 34/  0][1/2/0][ 100001048][0-0]                                 <
#   7>             TYPE[            NONE][ 35/ 35/ 36/  1][1/3/0][     41048][0-0]                                   T
#   7>      ANGLE_CLOSE[        TEMPLATE][ 37/ 37/ 38/  1][1/2/0][ 100001048][0-0]                                     >
#   7>            BYREF[            NONE][ 38/ 38/ 39/  0][1/2/0][ 100041008][0-0]                                      &
#   7>             WORD[            NONE][ 40/ 40/ 41/  1][1/2/0][    801008][0-0]                                        g
#   7>     FPAREN_CLOSE[      FUNC_PROTO][ 41/ 41/ 42/  0][1/1/0][ 100001000][0-0]                                         )
#   7>        SEMICOLON[      FUNC_PROTO][ 42/ 42/ 43/  0][1/1/0][ 100001000][0-0]                                          ;
#   7>          NEWLINE[            NONE][ 43/ 43/  1/  0][1/1/0][      1000][2-0]
#   9>         TEMPLATE[            NONE][  1/  1/  9/  0][1/1/0][     61000][0-0] template
#   9>       ANGLE_OPEN[        TEMPLATE][  9/  9/ 10/  0][1/1/0][ 100001040][0-0]         <
#   9>             TYPE[            NONE][ 11/ 11/ 16/  1][1/2/0][     51040][0-0]           class
#   9>             TYPE[            NONE][ 17/ 17/ 18/  1][1/2/0][      1040][0-0]                 T
#   9>      ANGLE_CLOSE[        TEMPLATE][ 19/ 19/ 20/  1][1/1/0][ 100001040][0-0]                   >
#   9>          NEWLINE[            NONE][ 20/ 20/  1/  0][1/1/0][      1000][1-0]
#  10>            CLASS[        TEMPLATE][  1/  1/  6/  0][1/1/0][     51000][0-0] class
#  10>             TYPE[           CLASS][  7/  7/ 13/  1][1/1/0][      1000][0-0]       future
#  10>          NEWLINE[            NONE][ 13/ 13/  1/  0][1/1/0][      1000][1-0]
#  11>       BRACE_OPEN[           CLASS][  1/  1/  2/  0][1/1/0][ 100001000][0-0] {
#  11>          NEWLINE[            NONE][  2/  2/  5/  0][2/2/0][      1000][1-0]
#  12>      COMMENT_CPP[   COMMENT_WHOLE][  5/  5/ 33/  0][2/2/0][      1000][0-1]     // Lose the space after void
#  12>          NEWLINE[            NONE][ 33/ 33/  5/  0][2/2/0][      1000][1-0]
#  13>           FRIEND[            NONE][  5/  5/ 11/  0][2/2/0][     71400][0-1]     friend
#  13>             TYPE[            NONE][ 12/ 12/ 16/  1][2/2/0][      1400][0-0]            void
#  13>        DC_MEMBER[            NONE][ 16/ 17/ 19/  1][2/2/0][ 100001400][0-0]                ::
#  13>             TYPE[            NONE][ 18/ 19/ 23/  0][2/2/0][      1400][0-0]                  test
#  13>        DC_MEMBER[            NONE][ 22/ 23/ 25/  0][2/2/0][ 100001400][0-0]                      ::
#  13>        FUNC_CALL[            NONE][ 24/ 25/ 29/  0][2/2/0][      1400][0-0]                        swap
#  13>       ANGLE_OPEN[        TEMPLATE][ 28/ 29/ 30/  0][2/2/0][ 100001440][0-0]                            <
#  13>      ANGLE_CLOSE[        TEMPLATE][ 30/ 31/ 32/  1][2/2/0][ 100041440][0-0]                              >
#  13>      FPAREN_OPEN[       FUNC_CALL][ 31/ 32/ 33/  0][2/2/0][ 100041400][0-0]                               (
#  13>             WORD[            NONE][ 32/ 33/ 39/  0][2/3/0][     41410][0-0]                                future
#  13>       ANGLE_OPEN[        TEMPLATE][ 38/ 39/ 40/  0][2/3/0][ 100001450][0-0]                                      <
#  13>             TYPE[            NONE][ 40/ 41/ 42/  1][2/4/0][     41450][0-0]                                        T
#  13>      ANGLE_CLOSE[        TEMPLATE][ 42/ 43/ 44/  1][2/3/0][ 100001450][0-0]                                          >
#  13>             ADDR[            NONE][ 43/ 44/ 45/  0][2/3/0][ 100041410][0-0]                                           &
#  13>            COMMA[            NONE][ 44/ 45/ 46/  0][2/3/0][ 100001410][0-0]                                            ,
#  13>             WORD[            NONE][ 46/ 47/ 53/  1][2/3/0][     41410][0-0]                                              future
#  13>       ANGLE_OPEN[        TEMPLATE][ 52/ 53/ 54/  0][2/3/0][ 100001450][0-0]                                                    <
#  13>             TYPE[            NONE][ 54/ 55/ 56/  1][2/4/0][     41450][0-0]                                                      T
#  13>      ANGLE_CLOSE[        TEMPLATE][ 56/ 57/ 58/  1][2/3/0][ 100001450][0-0]                                                        >
#  13>             ADDR[            NONE][ 57/ 58/ 59/  0][2/3/0][ 100041410][0-0]                                                         &
#  13>     FPAREN_CLOSE[       FUNC_CALL][ 58/ 59/ 60/  0][2/2/0][ 100001400][0-0]                                                          )
#  13>        SEMICOLON[            NONE][ 59/ 60/ 61/  0][2/2/0][ 100001400][0-0]                                                           ;
#  13>          NEWLINE[            NONE][ 60/ 61/  1/  0][2/2/0][      1000][1-0]
#  14>      BRACE_CLOSE[           CLASS][  1/  1/  2/  0][1/1/0][ 100001400][0-0] }
#  14>        SEMICOLON[           CLASS][  2/  2/  3/  0][1/1/0][ 100001000][0-0]  ;
#  14>          NEWLINE[            NONE][  3/  3/  1/  0][1/1/0][      1000][1-0]
#  15>      BRACE_CLOSE[       NAMESPACE][  1/  1/  2/  0][0/0/0][ 100000000][0-0] }
#  15>          NEWLINE[            NONE][  2/  2/  1/  0][0/0/0][         0][1-0]
# -=====-
